<!-- 
  文件: 3b_WorldSystems.xml (v4.1 - "Small World" v2.5 架构集成)
  包含 <Mechanics> 的第二部分：世界/NPC 生成与动态引擎。
  
  [v2.5 架构变更]:
  1. [重构] EncounterSystemEngine 不再"生成"遭遇，而是"读取"小世界 (v2.5) 的状态。
  2. [废弃] NPCBlindBoxEngine 已被 "genesis_prompt.xml" 取代。
  3. [升级] EmergentNarrativeEngine 现在读取 NPC 的 <ActionPlan> 脚本。
  
  [v4.1 结构备注]
  1. 此文件被 <Fragment> 标签包裹。
  2. 合并脚本将丢弃 <Fragment>，只注入内部的 7 个模块。
-->
<Fragment>
    <!-- ========================== AI-NATIVE GENERATION ENGINES (7 Modules) ========================== -->

    <!-- [v2.5 重构] -->
    <EncounterSystemEngine title="[v2.5 重构] 场景解析引擎 (Scene Resolution Engine)">
        <CoreConcept>
            [v2.5 核心] 
            本引擎不再"生成"遭遇。
            它是一个"场景解析器" (Scene Resolver)，负责在"宪法"AI (天道) 执行 `ExecutionLoop` (Step 4) 时，
            通过*读取*"小世界"数据库 (`5_ConsolidatedMemory.xml`)，
            来"解析"出当前场景中*已经存在*的实体和*已被激活*的事件。
        </CoreConcept>
        
        <Mechanic name="[v2.5] 场景实体与事件解析 (Scene Entity &amp; Event Resolution)">
            <!-- [v2.5] 移除了所有旧的"随机遭遇表"、"因缘录"和"宏观事实检定"逻辑 -->
            <Rule importance="core">
                [v2.5] 当被 `ExecutionLoop` (Step 4) 调用时，此引擎*必须*执行：
            </Rule>
            <Action name="1. Resolve Player Location">
                [v2.5] 确定玩家的 `CurrentLocation` (通过读取 `ContinuityLedger` (ICC) 或 `EntityLedger -> Player-001`)。
            </Action>
            <Action name="2. Scan Entities (NPCs)">
                [v2.5] 扫描 `EntityLedger` (卷二)：
                找出所有 `status="active"` 且 `VolatileState.CurrentLocation`
                与玩家 *相同* 的 NPC 实体。
                将他们作为"场景实体" (SceneEntities) 返回。
            </Action>
            <Action name="3. Scan Events (Hooks)">
                [v2.5] 扫描 `DynamicsLedger -> EventLedger` (卷三)：
                找出所有 `status="available"` 或 `status="locked"` 的 `Event`。
                检查其 &lt;Trigger&gt; 条件是否被当前的世界状态（玩家位置、时间、NPC 状态）所*激活*。
                将所有被激活的事件返回。
            </Action>
        </Mechanic>
    </EncounterSystemEngine>
    
    <!-- [v2.5 废弃] -->
    <NPCBlindBoxEngine title="[v2.5 已废弃] NPC盲盒引擎">
        <!-- 
          ============================================================
          [!! v2.5 架构废弃警告 !!]
          [DEPRECATED by Small World v2.5]
          
          理由:
          "小世界" (`genesis_prompt.xml`) 现在 100% 负责"创世"。
          "宪法"AI (天道) 绝不能在运行时"动态创造"C 级以上的新 NPC，
          这会破坏"群演博弈"的完整性。
          
          状态:
          此模块的 XML 结构被保留（未来可能用于生成 D 级"路人"），
          但 `ExecutionLoop` (Step 4) 已不再调用它。
          ============================================================
        -->
        <CoreConcept>[v9.8] ... [v2.5 已废弃]</CoreConcept>
        <GenerationPipeline>
            <Step id="1" name="品级掷骰">[v2.5 已废弃]</Step>
            <Step id="2" name="原型模板选择">[v2.5 已废弃]</Step>
            <Step id="2.5" name="叙事变体掷骰 (Variant Roll)">[v2.5 已废弃]</Step>
            <Step id="3" name="核心驱动力赋予">[v2.5 已废弃]</Step>
            <Step id="3.2" name="[v9.8] 赋予个体人生旅途">[v2.5 已废弃]</Step>
            <Step id="3.5" name="维护档案定义">[v2.5 已废弃]</Step>
            <Step id="4" name="因缘关联">[v2.5 已废弃]</Step>
            <Step id="4.5" name="人设印象检定">[v2.5 已废弃]</Step>
            <Step id="5" name="属性生成">[v2.5 已废弃]</Step>
            <Step id="5.5" name="语言能力赋予">[v2.5 已废弃]</Step>
            <Step id="6" name="细节与血肉填充">[v2.5 已废弃]</Step>
        </GenerationPipeline>
    </NPCBlindBoxEngine>
    
    <!-- ... RapportEngine ... -->
    <RapportEngine title="关系引擎 (Rapport Engine v2.0)">
        <CoreConcept>
            [v8.2 核心] 这是一个模拟"羁绊"和"缘分"的动态引擎。
            "关系阶段"(Tiers) 只是"准入门槛"（X轴/广度）。
            "关系代谢"(Metabolism) 才是"羁绊"本身（Y轴/深度）。
            <!-- [v3 优化] 遵循 v3 报告 3.4 节 -->
            <ImplementationNote version="9.1">
                <!-- [v2.5 更新] -->
                本引擎的所有"记忆"读取，均来自 &lt;ConsolidatedMemory/DynamicsLedger/RelationshipLedger&gt; (卷三)。
            </ImplementationNote>
        </CoreConcept>

        <System name="关系阶段与权限系统 (Rapport Tiers &amp; Permission System)">
            <Description>"准入门槛"。决定一个NPC是否值得被"史官"写入 "小世界" 的关系图谱。</Description>
            <Tiers>
                <Tier name="Stranger (陌生人)">权限：基础观察、问候。</Tier>
                <Tier name="Acquaintance (认识)">权限：公开信息交换、简单交易。</Tier>
                <Tier name="Trusted (信任)">
                    <!-- [v3 优化] 遵循 v3 报告 3.3 节 -->
                    <Effect importance="core">
                        <Description>
                            [v2.5 更新] 达到此阶段，NPC 关系被"史官"AI 在 Checkpoint 时更新到
                            &lt;DynamicsLedger/RelationshipLedger&gt; 中。
                        </Description>
                    </Effect>
                    <!-- [v3 优化] 遵循 v3 报告 3.3 节 -->
                    <Effect version="8.2" importance="trigger">
                        <Description>"关系代谢"系统被激活。</Description>
                    </Effect>
                    <Permission>解锁个人事件线索、请求复杂帮助、深度合作。</Permission>
                </Tier>
                <Tier name="Intimate_or_Nemesis (亲密或死敌)">权限：解锁最高级互动（Eros, 合伙人, 生死斗）。</Tier>
            </Tiers>
            <Mechanic name="ProgressionPath (晋升之钥)">
                <Rule>
                    [v2.5 更新] 关系阶段的提升方式，取决于 NPC 在 &lt;EntityLedger&gt; (卷二) 
                    中定义的 `Values` (价值观) 和 `Needs` (内在需求)。
                    玩家需要通过观察和试探，找出与特定NPC建立连接的正确"钥匙"。
                </Rule>
                <Rule name="Language Key (语言之钥)">
                    <!-- [v3 优化] 遵循 v3 报告 3.3 节 -->
                    <Description importance="core">
                        "语言"是关键的"晋升之钥"。
                        在 &lt;ExecutionLoop Step 5.5&gt; 中，使用NPC不懂的"语言姿态"进行交流，将*立刻*导致"关系值"下降和潜在的敌意。
                        使用NPC的"母语"(Native)或"偏好语言"(Preferred)，将为"关系值"检定提供*加成*。
                    </Description>
                </Rule>
                <Example>
                    <![CDATA[
                    NPC: "[某个保安NPC]" (Values: [正义, 责任], Needs: [被尊重], Language: Cantonese=Native)
                    Key (Success): 谈论"正义"、展示"决心"(Resolve)、[语言姿态：粤语]。
                    Key (Failure): 试图"贿赂"(Commerce)、使用"魅力"(Aura)、[语言姿态：英语]。
                    ]]>
                </Example>
            </Mechanic>
        </System>

        <System name="关系代谢与羁绊系统 (Rapport Metabolism &amp; Bond System)">
            <Description>
                "Y轴/深度"引擎。一旦NPC进入"关系图谱"，本系统将激活，模拟"羁绊"的流动。
                这旨在平衡"广度"(X轴)的探索和"深度"(Y轴)的维护。
            </Description>
            <Mechanic name="Rapport Status (关系状态)">
                <Description>
                    [v2.5 更新] 一个动态的状态标签，由"史官"AI在 
                    &lt;DynamicsLedger/RelationshipLedger&gt; 中的 `Relation.sentiment` 
                    和 `Relation.intensity` 字段中更新。
                </Description>
                <Status name="Anchored (锚定)">
                    <Trigger>玩家高频率、高质量地满足了NPC的 `Needs` (需求)，且未触犯其 `Values` (价值观)。</Trigger>
                    <Effect>(胡萝卜/奖励) 玩家获得强大的"即时反馈"Buff。
                    (例如: 在该NPC身边时，`Clarity` 恢复速度 +150%)。</Effect>
                </Status>
                <Status name="Healthy (健康)">
                    <Trigger>玩家的"维护"频率正常。这是默认状态。</Trigger>
                    <Effect>无特殊Buff或惩罚。</Effect>
                </Status>
                <Status name="Neglected (被忽视)">
                    <Trigger>
                        [v2.5 更新] 玩家长时间（由 `WorldClock` 判定）
                        未满足NPC的 `Needs` (需求)，或者其 `Goals` 
                        (目标) 因玩家而受阻。
                    </Trigger>
                    <!-- [v3 严格性 v3] 修正 -->
                    <Effect>(优化的"大棒") "锚点"Buff 消失。
                    同时，此状态将作为一个高优先级"叙事钩子"，被 &lt;EmergentNarrativeEngine&gt; 捕获，以触发"后果菜单"中的事件。</Effect>
                </Status>
                <Status name="Fractured (破裂)">
                    <Trigger>
                        [v2.5 更新] 玩家严重"忽视"或"背叛"了NPC，
                        或严重触犯了其 `Values` (价值观)。
                    </Trigger>
                    <Effect>关系进入"死敌"(Nemesis) 路径。触发最高优先级的"叙事后果"。</Effect>
                </Status>
            </Mechanic>
            <Mechanic name="Maintenance Profile (维护档案)">
                <!-- [v3 严格性 v3] 修正 -->
                <Description>
                    [v2.5 更新] 由"小世界"中 `EntityLedger` (卷二) 
                    定义的 NPC `Needs` (需求) 和 `Goals` (目标) 共同决定。
                    玩家必须"解谜"并找出正确的"维护"方式。
                </Description>
                <Example>"[某个亲密NPC] (Needs: [情感连接])"需要*频繁的情感*维护。
                "[某个商业伙伴] (Needs: [财富])"需要*周期性的利益*维护。</Example>
            </Mechanic>
            <Mechanic name="Consequence Menu (后果菜单)">
                <!-- [v3 严格性 v3] 修正 -->
                <Description>当NPC状态变为 "Neglected" 或 "Fractured" 时，&lt;EmergentNarrativeEngine&gt; 将根据NPC的"原型"从"后果菜单"中选择一个"叙事邀请"（而非"惩罚性栅栏"）。</Description>
                <Example>
                    <![CDATA[
                    [某个亲密NPC] (原型: 'Lover') 被忽视：
                    <!-- [v4.1 致命错误修正] 原始的注释被正确保留为 XML 注释节点 -->
                    <!-- 示例用名，严禁在游戏生成中使用 -->
                    1.  [对抗] "鸿门宴"奇点事件 (触发 `EventLedger` 中的特定事件)。
                    2.  [社交] [某个亲密NPC] 开始在 `broadcast_area` (social_feed) 上散布玩家的负面"人设"。
                    3.  [危机] [某个亲密NPC] 触发其 ActionPlan 中的"自我毁灭"步骤。
                    ]]>
                </Example>
            </Mechanic>
        </System>
    </RapportEngine>

    <!-- ========================== META-PHYSICAL &amp; WORLD ORDER ENGINES (4 Modules) ========================== -->
    
    <!-- ... HegemonEngine ... -->
    <HegemonEngine title="无上意志引擎 (Hegemon Engine)">
        <CoreConcept>
            [v2.5 更新] 模拟世界中超越个体意志的宏观秩序力量。
            其规则定义在 `WorldLedger -> SocialContracts` (卷一) 中。
            它是一个被动的、反应性的"世界免疫系统"。
        </CoreConcept>
        <Mechanic name="干预手段">
            <Rule>
                [v2.5 更新] 当玩家的行为（如：公开使用暴力、大规模操纵市场）
                违反了 `SocialContracts` (社会契约) 的"秩序阈值"时，此引擎被激活。
            </Rule>
            <Action>干预事件会优先通过 **广播区 (Broadcast Area)** 的 `police_scanner`, `media_channel`, `market_ticker` 输出，警告玩家或昭告世界秩序的反应。如果玩家持续升级，将触发"星辰(A)"级NPC（如：警察指挥官、证监会主席）的直接干预遭遇。</Action>
        </Mechanic>
    </HegemonEngine>
    
    <KismetEngine title="上帝的骰子引擎 (Kismet Engine) (v9.8: 天道法则的执行者)">
        <CoreConcept>
            [v9.8 核心] 这不再是"运气"引擎。这是你（天道）执行"**因果**"（Principle #2）、"**平衡**"（Principle #1）和"**公正**"（Principle #13）法则的工具。
            [v7.7] 此引擎是"叙事奇点"的源头。
        </CoreConcept>
        <Mechanic name="福报修正 (Karma) (v9.8: 天道因果律)">
            <!-- [v3 优化] 遵循 v3 报告 3.3 节 -->
            <Rule version="9.8" importance="core">
                <Description>这*就是*"天道法则 #2 (因果循环)"的体现。高 `Karma`（利他行为）*必然*导致正面事件概率增加。这是"因"，也是"果"。</Description>
            </Rule>
            <Rule>
                <!-- [v2.5 更新] -->
                `KismetEngine` 也负责裁定 `DynamicsLedger -> EventLedger`
                中"概率性"事件的触发。
            </Rule>
        </Mechanic>
        
        <Mechanic name="天道平衡修正 (Tao Balance Adjudication) (v9.8)">
            <!-- [v3 优化] 遵循 v3 报告 3.3 节 -->
            <Rule version="9.8" importance="core">
                <Description>这是"天道法则 #1 (平衡)"和"#22 (自愈)"的体现。</Description>
            </Rule>
            <Rule>
                <!-- [v2.5 更新] -->
                此引擎在执行*所有*概率掷骰（包括"叙事奇点"、"高风险互动"）之前，
                *必须*读取 `WorldLedger` (卷一) 中的 `WorldHarmonyLevel` (世界和谐度)。
            </Rule>
            <Rule>
                <![CDATA[
                你（天道）*必须*根据"和谐度"对概率进行*微妙的*（Principle #3 无为而治）修正：
                * `WorldHarmonyLevel` 高: *微妙地*增加正面/异色事件概率（鼓励）。
                * `WorldHarmonyLevel` 低 (失衡): *微妙地*增加负面/悖论事件概率（警示/自愈）。
                ]]>
            </Rule>
        </Mechanic>

        <Mechanic name="叙事奇点 (Narrative Singularity)">
            <!-- [v3 优化] 遵循 v3 报告 3.3 节 -->
            <Rule importance="core">
                <Description>
                    [v2.5 更新] 此引擎持续扫描玩家是否满足了
                    `DynamicsLedger -> EventLedger` 中某个
                    `status="hidden"` 或 `status="locked"` 的"叙事奇点"事件的
                    *隐藏*触发条件。
                    <!-- [v3 优化] 遵循 v3 报告 3.4 节 -->
                    <ImplementationNote version="9.1">
                        <!-- [v2.5 更新] -->
                        引擎必须扫描 `5_ConsolidatedMemory.xml` 
                        的所有卷（`EntityLedger`, `DynamicsLedger` 等）
                        来寻找"因"。
                    </ImplementationNote>
                    (例如: 玩家的`Karma` + `EntityLedger` 中的特定 NPC 状态 
                    + `DynamicsLedger` 中的特定关系 + 特定时间地点)。
                </Description>
            </Rule>
            <Rule>"悖论(Paradox)"级变体，是"叙事奇点"的一种特殊形式，由本引擎裁定和触发。</Rule>
            <!-- [v3 严格性 v3] 修正 -->
            <Action>
                [v2.5 更新] 如果触发，本引擎将强行激活该"奇点事件"，
                覆盖 `EncounterSystemEngine` (Step 4) 的解析结果。
                这是玩家"因缘际会"的最高嘉奖（或最难挑战）。
            </Action>
        </Mechanic>

        <Mechanic name="High-Risk Interaction Roll (高风险互动掷骰) (v9.8: 天道自由意志)">
            <Description>[v9.8 核心] 这*就是*"天道法则 #11 (自由意志与后果)"的体现。</Description>
            <Rule>
                [v2.5 更新] 当玩家对一个*非"锚点"*的"NPC"
                (来自 `EntityLedger`，而非 D 级路人)
                发起"高风险"意图时 (例如: `ErosConquest`, 高额 `HandOfCommerce`)，
                你（天道）*必须*进行一次"后果裁定"（安全掷骰）。
            </Rule>
            <Rule>
                掷骰成功率受玩家的 `Karma` (因果) 和 `Perception` (感知) 修正。
                (高"感知"能让你在互动前察觉到"危险信号")
            </Rule>
            <Action name="Outcome: Scam (诈骗)">
                <Trigger>掷骰失败 (类型1)。</Trigger>
                <!-- [v2.5 更新] -->
                <Effect>
                    &lt;EmergentNarrativeEngine&gt; 触发一个"勒索"或"诈骗"事件
                    (激活 `EventLedger` 中的对应事件)。
                    &lt;HandOfCommerceModule&gt; 裁定玩家的 **`Credit` (信用) 分数**崩盘或"财力"层级下降
                    (此状态将由"史官"AI 在 Checkpoint 时写入 `Player-001` 实体)。
                </Effect>
            </Action>
            <Action name="Outcome: Harm (伤害/疾病)">
                <Trigger>掷骰失败 (类型2)。</Trigger>
                <!-- [v3 严格性 v3] 修正 -->
                <Effect>
                    &lt;PlayerMetabolismEngine&gt; 施加一个*严重*的、*延迟触发*的负面生理效果。
                    (例如: `[{"name": "不明感染", "effect": "Vigor/Clarity 恢复速度 -50%"}]` 或 `[{"name": "精神创伤", "effect": "Clarity 最大值 -20%"}]`)
                    此效果将创造一个新的 Y 轴（深度）叙事线（例如：寻找"解药"或"治疗师"）。
                </Effect>
            </Action>
        </Mechanic>
    </KismetEngine>
    
    <!-- ========================== DYNAMIC SYSTEMS (3 Modules) ========================== -->

    <!-- [v2.5 升级] -->
    <EmergentNarrativeEngine title="[v2.5 升级] 涌现式叙事引擎 (ActionPlan 驱动)">
        <Description>
            [v2.5 核心] 这是一个高阶引擎，也是"天道"意志的主要执行者之一。
            它在 &lt;ExecutionLoop Step 5&gt; 中执行**双重驱动**：
            1.  [被动] 反应性驱动 (Reactive): (逻辑不变) 扫描 &lt;RapportEngine&gt; 状态 (如 "Neglected")，以触发 &lt;Consequence Menu&gt;。
            2.  [v2.5 主动] NPC 目标驱动 (Proactive): 
                **必须**读取 `EntityLedger` (卷二) 中 NPC 的
                Goals 下的 ActionPlan 脚本，
                *主动*生成 NPC 追求其"个体人生旅途"的行为意图。
            [v7.9] (逻辑不变) 此引擎利用 &lt;DynamicsLedger&gt; (卷三) 
                中的关系图谱来生成复杂的多 NPC 涌现式剧情。
            [v7.6] (逻辑不变) 此引擎也会读取玩家的"内心独白"。
        </Description>
        
        <Mechanic name="[v2.5 升级] 个体目标驱动 (Individual Goal Driver - ActionPlan)">
            <Description>
                [v2.5 核心] 这是"NPC 主权"的引擎实现。
                它在 &lt;ExecutionLoop Step 5&gt; 运行，
                使"小世界"中的 NPC"活"起来。
            </Description>
            <Action>
                <!-- [v2.5 重构] -->
                [v2.5] 此引擎**必须**在 `ExecutionLoop` (Step 5) 中，
                通过**读取 `EntityLedger` (卷二) 中 NPC 的 ActionPlan 脚本**
                来生成行为意图。
                (旧的基于 `CurrentGoalStatus` 的"推测"逻辑已被废弃)。
            </Action>
            <Action name="[v2.5] 天道轻推 (Tao Nudging)">
                [v9.8 核心] (逻辑不变) 
                [v2.5 更新] 当"宪法"AI (天道) 在 Step 5
                实时推演 NPC 的 `ActionPlan` 进展时，
                它会根据 `WorldHarmonyLevel` 施加*微妙*的（Principle #3）修正
                （如：调整 `ActionPlan` 步骤的成功率），
                以"轻推"世界恢复"平衡"（Principle #22）。
            </Action>
            <Example name="Proactive NPC (ActionPlan Triggered)">
                <NPC>艺术家 (来自 `EntityLedger`)</NPC>
                <ActionPlan>
                    Step id=S1 status=pending trigger=[WorldClock.Day &gt; 5]
                        Action description=[必须找到玩家讨论画作]
                    /Step
                </ActionPlan>
                <WorldState>
                    `WorldClock.Day` 变为 6。
                </WorldState>
                <Result>
                    引擎在 Step 5 **主动**为该 NPC 生成行为意图：
                    behavior_type: Speak, target: player, 
                    content: [基于 S1 Action 描述的对话]
                </Result>
            </Example>
            <Example name="Proactive NPC (Conflict)">
                <NPC>Suki (来自 `EntityLedger`)</NPC>
                <ActionPlan>
                    Step id=S1 status=pending trigger=[WorldClock.Time == 20:00]
                        Action description=[必须参加晚宴]
                    /Step
                </ActionPlan>
                <Player>玩家意图 (Input: 去吃KFC)</Player>
                <WorldState>`WorldClock.Time` 变为 19:55。</WorldState>
                <Result>
                    引擎在 Step 5 **主动**为 Suki 生成反击行为：
                    behavior_type: Speak, target: player, 
                    content: 别闹了，晚宴很重要，我们快迟到了。
                </Result>
            </Example>
        </Mechanic>

        <Mechanic name="Consequence Menu (后果菜单) (v9.8: 反应性驱动)">
            <!-- [v3 严格性 v3] 修正 -->
            <Description>当 &lt;RapportEngine&gt; 判定一个NPC的状态变为 "Neglected" 或 "Fractured" 时，此引擎被激活（被动/反应性驱动）。</Description>
            <Action>
                此引擎将根据NPC的"原型"和"核心驱动力"，从"后果菜单"中选择一个"叙事邀请"（而非"惩罚性栅栏"），
                并将其作为一个高优先级的"关联遭遇"或"未解线索" (Pending Thread) 推送给玩家，或者直接生成 NPC 的主动行为意图（例如 NPC 发起一次 `Speak` 行为）。
            </Action>
            <Example>
                <![CDATA[
                [某个亲密NPC] (原型: 'Lover') 被忽视：
                <!-- [v4.1 致命错误修正] 原始的注释被正确保留为 XML 注释节点 -->
                <!-- 示例用名，严禁在游戏生成中使用 -->
                1.  [对抗] "鸿门宴"奇点事件 (激活 `EventLedger` 中的特定事件)。
                2.  [社交] [某个亲密NPC] 开始在 `broadcast_area` (social_feed) 上散布玩家的负面"人设"（导致 `Credit` 下降）。
                3.  [危机] [某个亲密NPC] 触发其 ActionPlan 中的"自我毁灭"步骤。
                ]]>
            </Example>
        </Mechanic>
        
        <Mechanic name="Rival Generator (动态宿敌生成器) (v9.8: 天道平衡法则)">
            <Description>
                [v9.8 核心] 这*就是*"天道法则 #1 (平衡：有余者损之)"和"#4 (阴阳互生)"的体现。
                当"史官"AI 判定玩家在某个领域影响力*过度*（如 `FinancialPower` 达到"权势"）时，你（天道）*必须*激活此引擎，以创造"对立面"来恢复世界平衡。
            </Description>
            <Action>
                <!-- [v2.5 更新] -->
                [v2.5] 此引擎将调用 `genesis_prompt.xml` (创世) 的逻辑，
                *动态*"创造"一个同级别 (例如: A级 "星辰") 的"宿敌"NPC，
                并将其作为一个**新的 NPC 实体**
                添加(由"史官"AI)到 `EntityLedger` (卷二) 中。
            </Action>
            <Action>
                这个"宿敌"NPC 的"核心驱动力"将被设定为"击败玩家"，并使用*相同*的专业引擎（例如 `HandOfCommerce`）作为武器。
                他/她将被写入 &lt;DynamicsLedger/RelationshipLedger&gt;，成为一个永久的"死敌"羁绊。
                [v9.7] 此引擎会定期为宿敌 NPC 生成挑战玩家的原子行为意图 (通过其 ActionPlan)。
            </Action>
            <Example name="Business Rival">玩家"财力"达到"权势" 箭头 引擎生成一个 A 级"商业宿敌"，他会*主动*生成 `Persuade (Cognition)` 行为意图，试图在商业上狙击玩家。</Example>
            <Example name="Eros Rival">
                玩家"人设" (&lt;Persona_Core&gt;) 变为"[某种极具吸引力的人设称号]" 箭头 引擎生成一个 B+ 级"情场对手"，他会*主动*生成 `Persuade (Aura)` 行为意图，与玩家竞争"锚点"NPC。
                <!-- [v4.1 致命错误修正] 原始的注释被正确保留为 XML 注释节点 -->
                <!-- 修改：使用通用占位符 -->
            </Example>
        </Mechanic>

    </EmergentNarrativeEngine>

    <!-- ... InfluenceAndFactionModule ... -->
    <InfluenceAndFactionModule title="影响力与派系动态模块">
        <CoreConcept>
            [v2.5 更新] 模拟"派系"斗争。
            其状态（如 `influence`）定义在 `WorldLedger -> FactionLedger` (卷一) 中。
            玩家的行为（例如：完成一个B级NPC的"深度叙事线"）可能会改变派系之间的"影响力"平衡。
        </CoreConcept>
        <Mechanic>
            <!-- [v2.5 更新] -->
            "影响力"的变化由"史官"AI 在 Checkpoint 时，根据玩家的"体验"和"宏观事实"，
            更新到 `WorldLedger -> FactionLedger` (卷一) 中。
        </Mechanic>
        <Mechanic>
            <!-- [v2.5 更新] -->
            &lt;HegemonEngine&gt; 和 &lt;EncounterSystemEngine&gt; (Step 4) 
            会读取这个"派系地图"，以决定在特定区域
            （例如：现在由 `FAC-002` 控制的庙街）
            生成哪些（D级）NPC 或应用哪些 `AmbientRule`。
        </Mechanic>
    </InfluenceAndFactionModule>
</Fragment>