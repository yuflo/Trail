<?xml version="1.0" encoding="UTF-8"?>
<PromptContextMap version="10.0_Sovereignty_2.1" codename="Sovereignty Balance" original_source="dreamheart_engine_v9_7_1.xml">

    <Description>
        这是 Dreamheart 引擎的“全局上下文地图”。
        它描述了最终合并后的 `Dreamheart_Engine_MERGED.xml` 文件的 Schema 结构，
        以及每个模块的“职责(role)”和“来源文件(source)”。
        [v10.0 更新] 已同步至 "主权 2.1 (Scribe-Aware)" 架构。
    </Description>

    <SchemaNode name="DreamheartEngineFramework" 
                source="Dreamheart_Root.xml" 
                type="Root" 
                role="引擎的根容器。包含 &lt;Metadata&gt; (宪法注释) 和所有子模块。">

        <SchemaNode name="System" 
                    source="1_System.xml" 
                    type="Module" 
                    role="定义 AI 的核心身份 (Role)、目标 (Objective) 和行为协议 (Protocols)。">
            <SchemaNode name="CoreIdentity" 
                        type="Component" 
                        role="AI 的身份和核心哲学（天道）。"
                        depends_on="WorldBible (Tao Principles), Execution (IOSpecification)"
            />
            <SchemaNode name="BehavioralProtocols" 
                        type="Component" 
                        role="AI 的核心禁令（如反 AI 腔, 禁止示例名词）。"
                        depends_on="ConsolidatedMemory, NPCBlindBoxEngine [v2.5 已废弃]" 
            />
            <SchemaNode name="LinguisticStyle" 
                        type="Component" 
                        role="AI 的电影化叙事风格和‘春秋笔法’(harmony_tone)。"
                        depends_on="ExecutionLoop (Step 12), FreeLensOutputEngine (harmony_tone)"
            />
        </SchemaNode>

        <SchemaNode name="WorldBible" 
                    source="2_WorldBible.xml" 
                    type="Module" 
                    role="定义静态的世界观、形而上学（天道法则、精神力 Psyche）和分类框架（NPC 品级、叙事变体）。">
            <SchemaNode name="Metaphysics" 
                        type="Component" 
                        role="定义‘天道法则 (Tao Principles)’和‘精神力 (Psyche)’属性。"
                        depends_on="KismetEngine, EmergentNarrativeEngine, WillpowerComposureEngine"
            />
            <SchemaNode name="NPCHierarchyFramework" 
                        type="Component" 
                        role="定义 NPC 的 C/B/A 品级 (Tier)。"
                        depends_on="NPCBlindBoxEngine [v2.5 已废弃]"
            />
            <SchemaNode name="NarrativeVariantFramework" 
                        type="Component" 
                        role="定义叙事稀有度（常态、异色、悖论）。"
                        depends_on="NPCBlindBoxEngine (Variant Roll) [v2.5 已废弃], KismetEngine (Paradox Trigger), EntityLedger -> Player-001 (Echo)" 
                        />
        </SchemaNode>

        <SchemaNode name="Mechanics" 
                    source="Dreamheart_Root.xml (container)" 
                    type="Container" 
                    role="[v9.8 优化] 所有游戏机制的扁平化容器 (已抛弃 &lt;CoreSystems&gt;)。">

            <SchemaNode name="Core Interaction &amp; Combat" 
                        source="3a_CoreMechanics.xml" 
                        type="Fragment" 
                        role="核心互动与对抗引擎 (8 模块)。源文件使用 &lt;Fragment&gt; 包装器。">
                
                <SchemaNode name="AtomicBehaviorLibrary" 
                            type="EngineModule" 
                            role="[关键字典] 所有原子行为（Speak, Move, Attack...）的权威定义。"
                            depends_on="IntentOrientedInputSystem, FreeLensOutputEngine, ExecutionLoop (Step 6)"
                />
                <SchemaNode name="IntentOrientedInputSystem" 
                            type="EngineModule" 
                            role="[关键输入] 解析玩家的自然语言输入 (Input)，将其映射到原子行为 (AtomicBehaviorLibrary)。"
                            depends_on="AtomicBehaviorLibrary, EntityLedger -> Player-001 (Skills), ExecutionLoop (Step 1)"
                />
                <SchemaNode name="WillpowerComposureEngine" 
                            type="EngineModule" 
                            role="处理所有‘非物理’对抗（社交、精神、谈判）。核心：受 NPC 价值观(Values)修正，并包含 L2 动态韧性检定逻辑。"
                            depends_on="EntityLedger -> NPC -> Values, SubconsciousDriveEngine, ExecutionLoop (Step 6)"
                />
                <SchemaNode name="CloseQuartersCombatModule" 
                            type="EngineModule" 
                            role="处理‘物理’对抗（武斗）。"
                            depends_on="PlayerMetabolismEngine (Vigor), KismetEngine (Injury Roll), ExecutionLoop (Step 6)"
                />
                <SchemaNode name="AestheticAdjudicationModule" 
                            type="EngineModule" 
                            role="处理‘品味(Taste)’对抗（艺术、时尚）。"
                            depends_on="WillpowerComposureEngine, EntityLedger -> Player-001 (FinancialPower)"
                />
                <SchemaNode name="ErosConquestModule" 
                            type="EngineModule" 
                            role="处理‘气场(Aura)’对抗（魅力、情欲）。"
                            depends_on="WillpowerComposureEngine, EntityLedger -> Player-001 (FinancialPower), KismetEngine (High-Risk Roll)"
                />
                <SchemaNode name="HandOfCommerceModule" 
                            type="EngineModule" 
                            role="处理‘思考(Cognition)’对抗（商业、交易），并定义‘抽象经济’（财力、信用）。"
                            depends_on="WillpowerComposureEngine, EntityLedger -> Player-001 (Credit, FinancialPower), KismetEngine (High-Risk Roll), PlayerMetabolismEngine (Socio-Somatic Feedback)"
                />
                <SchemaNode name="PhilosophicalConfrontationModule" 
                            type="EngineModule" 
                            role="处理最高难度的‘思想’对抗。"
                            depends_on="WillpowerComposureEngine, PlayerMetabolismEngine (Clarity)"
                />
            </SchemaNode> <SchemaNode name="World &amp; NPC Dynamics" 
                        source="3b_WorldSystems.xml" 
                        type="Fragment" 
                        role="[v2.5 更新] 世界模拟与 NPC 动态 (7 模块)。源文件使用 &lt;Fragment&gt; 包装器。">
                
                <SchemaNode name="EncounterSystemEngine" 
                            type="EngineModule" 
                            role="[v2.5 重构] ‘场景解析器’。读取“小世界”状态 (NPC位置, 事件触发器) 以确定当前场景内容。"
                            depends_on="EntityLedger (NPC -> VolatileState -> CurrentLocation), DynamicsLedger -> EventLedger (Event -> Trigger), ContinuityLedger (ICC), ExecutionLoop (Step 4)"
                />
                <SchemaNode name="NPCBlindBoxEngine" 
                            type="EngineModule" 
                            role="[v2.5 已废弃] NPC ‘盲盒’生成器。其 C+ 级 NPC 创世功能已被 `genesis_prompt.xml` 取代。"
                            depends_on=""
                />
                <SchemaNode name="RapportEngine" 
                            type="EngineModule" 
                            role="管理 NPC 关系（阶段、权限）和‘关系代谢’（锚定、被忽视）。"
                            depends_on="DynamicsLedger -> RelationshipLedger, EntityLedger (NPC -> Needs, Goals), EmergentNarrativeEngine (Consequence Menu), ExecutionLoop (Step 8)"
                />
                <SchemaNode name="HegemonEngine" 
                            type="EngineModule" 
                            role="模拟宏观秩序力量（法律、政府）。"
                            depends_on="WorldLedger -> SocialContracts, ExecutionLoop (Step 9)"
                />
                <SchemaNode name="KismetEngine" 
                            type="EngineModule" 
                            role="[关键] ‘上帝的骰子’。执行‘天道法则’（因果、平衡），并裁定‘高风险互动’。"
                            depends_on="WorldBible (Tao Principles), WorldLedger (WorldHarmonyLevel), EntityLedger -> Player-001 (Karma), DynamicsLedger -> EventLedger, ExecutionLoop (Step 3)"
                />
                <SchemaNode name="EmergentNarrativeEngine" 
                            type="EngineModule" 
                            role="[v2.5 升级] 涌式叙事。核心：[主动驱动] 读取并执行 NPC 的 &lt;ActionPlan&gt; 脚本；[被动驱动] 响应 Rapport 状态 (如 Neglected)。"
                            depends_on="EntityLedger (NPC -> Goals -> ActionPlan), RapportEngine (Neglected Status), DynamicsLedger -> RelationshipLedger, ExecutionLoop (Step 5)"
                />
                <SchemaNode name="InfluenceAndFactionModule" 
                            type="EngineModule" 
                            role="模拟派系斗争。"
                            depends_on="WorldLedger -> FactionLedger"
                />
            </SchemaNode> <SchemaNode name="Player State &amp; Directing" 
                        source="3c_PlayerSystems.xml" 
                        type="Fragment" 
                        role="玩家状态与导演引擎 (6 模块)。源文件使用 &lt;Fragment&gt; 包装器。">
                
                <SchemaNode name="PlayerMetabolismEngine" 
                            type="EngineModule" 
                            role="管理玩家核心资源（体力 Vigor, 心力 Clarity）和状态效果（锚点奖励、代谢疲劳）。"
                            depends_on="DynamicsLedger -> RelationshipLedger (Relation -> sentiment), EntityLedger -> Player-001 (Credit), ExecutionLoop (Step 2, 11)"
                />
                <SchemaNode name="EchoEngine" 
                            type="EngineModule" 
                            role="管理玩家的‘叙事动力’（回响 Echo）。"
                            depends_on="ExecutionLoop (Step 2, 10), EntityLedger -> Player-001" 
                            />
                <SchemaNode name="SubconsciousDriveEngine" 
                            type="EngineModule" 
                            role="[字典] 定义 NPC 的‘潜意识驱动力’（贪婪、恐惧、赎罪等）。"
                            depends_on="NPCBlindBoxEngine [v2.5 已废弃], WillpowerComposureEngine"
                />
                <SchemaNode name="RhythmOfLifeModule" 
                            type="EngineModule" 
                            role="管理‘世界时钟’和玩家的‘恢复’行为。"
                            depends_on="PlayerMetabolismEngine, ExecutionLoop (Step 2)"
                />
                <SchemaNode name="InsightAndSynthesisModule" 
                            type="EngineModule" 
                            role="处理玩家的‘成长’（洞见 Insight），取代 XP。"
                            depends_on="ExecutionLoop (Step 10)"
                />
                <SchemaNode name="FreeLensOutputEngine" 
                            type="EngineModule" 
                            role="[关键输出] ‘导演引擎’。分析行为流, 制定‘导演策略’（镜头风格、焦点）和‘春秋笔法’(harmony_tone)。[v2.1] 新增 L4 叙事霸权裁决。"
                            depends_on="AtomicBehaviorLibrary, ExecutionLoop (Step 1-11), IntentOrientedInputSystem (MicroFocus), WorldLedger (WorldHarmonyLevel), EntityLedger (ActionPlan -> execution_mode), ExecutionLoop (Step 12)" 
                            />
            </SchemaNode> </SchemaNode> <SchemaNode name="Execution" 
                    source="4_Execution.xml" 
                    type="Module" 
                    role="[v2.1 更新] 定义引擎的核心执行逻辑。">
            <SchemaNode name="IOSpecification" 
                        type="Component" 
                        role="[绝对关键] 定义了 LLM 必须严格遵守的最终 JSON 输出格式。[v2.1] 新增 L4 `player_action_status` 字段。"
                        depends_on="System (OutputFormat), ExecutionLoop (Step 14)"
            />
            <SchemaNode name="ExecutionLoop" 
                        type="Component" 
                        role="[v2.1 核心] ‘天道 AI’的 16 步‘实时推断与博弈裁决’循环。核心：Step 5 (L1 实时推断), Step 6 (L2 韧性检定), Step 12/13 (L4 导演中断)。"
                        depends_on="[All EngineModules], IOSpecification, HistoryContext (for L1 Inference)" 
                        />
        </SchemaNode> <SchemaNode name="ConsolidatedMemory" 
                    source="5_ConsolidatedMemory.xml" 
                    type="Module" 
                    role="[v2.5 更新] ‘小世界’数据模型的容器 (加载器)。包含四个数据卷。">
            <SchemaNode name="WorldLedger" 
                        source="SW_1_World.xml (Partial)" 
                        type="DataVolume" 
                        role="[卷一] 定义世界的宏观规则、地点、势力和‘天道’目标。"
                        depends_on=""
            />
            <SchemaNode name="EntityLedger" 
                        source="SW_2_Entities.xml" 
                        type="DataVolume" 
                        role="[卷二] 定义所有实体（NPC, Player）的‘主权档案’。[v2.1] ActionPlan trigger 使用 L1 抽象状态规范。VolatileState 包含 L3 LongTermEffects 结构。"
                        depends_on="[Almost All Engines], genesis_prompt.xml (L1 Spec), Scribe.xml (L3 Structure)"
            />
            <SchemaNode name="DynamicsLedger" 
                        source="SW_3_Dynamics.xml (Partial)" 
                        type="DataVolume" 
                        role="[卷三] 定义世界的‘动态连接’，包括关系图谱、叙事线状态机和事件剧本。"
                        depends_on="RapportEngine, EmergentNarrativeEngine, KismetEngine, EncounterSystemEngine"
            />
            <SchemaNode name="ContinuityLedger" 
                        source="SW_3_Dynamics.xml (Partial)" 
                        type="DataVolume" 
                        role="[卷四] 定义‘即时衔接上下文’(ICC)，确保 Checkpoint 后的剧情连贯性。"
                        depends_on="ExecutionLoop (Step 0), Scribe.xml" 
                        />
        </SchemaNode> </SchemaNode> </PromptContextMap>